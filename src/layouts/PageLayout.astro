---
import "../styles/page.scss";
import BaseLayout from "./BaseLayout.astro";
import Header from "../components/partial/Header.astro";
import PageCaption from "../components/partial/PageCaption.astro";
import { type Nav, type SubNav } from "../types";
import { index } from "../configs/site.json";

interface Props {
    headline: string;
    paratext: string;
    subline?: string;
    bgImage?: string;
    hiddenSubmenu?: boolean;
}

const { navs } = index;
const {
    headline,
    paratext,
    subline,
    bgImage,
    hiddenSubmenu = false,
} = Astro.props;

const currPathname = Astro.url.pathname; // '/techblog/blog'
const routes = decodeURI(currPathname).match(/[^\/]+/g); // [ 'techblog', 'blog' ]

let submenu: any[] = [];
if (!hiddenSubmenu) {
    if (routes && routes.length > 1) {
        const pRoute = `/${routes[0]}`;
        const currNav = navs.find((nav) => nav.href === pRoute);
        if (currNav && currNav.children) {
            submenu = currNav.children.map((child) => {
                return {
                    text: child.text,
                    href: `${currNav.href}${child.href}`,
                    isActive: currPathname.includes(pRoute + child.href),
                };
            });
        }
    }
}
---

<BaseLayout>
    <div class="page">
        <Header title={index.title} />

        <PageCaption
            headline={headline}
            subline={subline}
            paratext={paratext}
            bgImage={bgImage}
        />

        {
            submenu.length > 0 && (
                <div class="page-submenu">
                    {submenu.map((menu) => (
                        <a
                            href={menu.href}
                            class="submenu-item"
                            class:list={[{ active: menu.isActive }]}
                        >
                            {menu.text}
                        </a>
                    ))}
                </div>
            )
        }

        <slot />
    </div>
</BaseLayout>
